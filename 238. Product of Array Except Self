Problem :: 238. Product of Array Except Self

Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.

 


Time Complexituy :: O(N)
Space Complexity :: O(N)

Code :: 
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        vector<int>pref(nums.size(),1) , suffix(nums.size(),1);
        pref[0] = nums[0];
        suffix[nums.size()-1] = nums[nums.size()-1];
        for(int i=1 ; i<nums.size() ; i++){
            pref[i] = pref[i-1] * nums[i];
        }
        for(int i= nums.size() - 2; i>=0 ; i--){
            suffix[i] = suffix[i+1]*nums[i];
        }
       vector<int>v(nums.size());
       for(int i=1 ; i<nums.size()-1 ; i++){
        v[i] = pref[i-1] * suffix[i+1];
       }
       v[0] = suffix[1];
       v[nums.size()-1] = pref[nums.size()-2];
        return v;
    }
};
