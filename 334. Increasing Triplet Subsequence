

Problem :: 334. Increasing Triplet Subsequence

Given an integer array nums, return true if there exists a triple of indices (i, j, k) such that i < j < k and nums[i] < nums[j] < nums[k]. If no such indices exists, return false.

 

Time Complexity :: O(N)
Space Complexity :: O(1)

Code :: 
class Solution {
    bool solve(vector<int>&nums ,long prev , int i,int cnt){
        if(cnt==3)return 1;
        if(i>=nums.size())return 0;
        bool ans = 0;
        if(prev == LONG_MIN  or nums[i]>prev)ans |= solve(nums , nums[i] , i+1, cnt+1);
        ans |= solve(nums , prev , i+1 , cnt);
        return ans;
    }
public:
    bool increasingTriplet(vector<int>& nums) {
        //APPROACH 1

        int left=INT_MAX;
        int mid=INT_MAX;
        for(int i=0;i<nums.size();i++){
            {
                if(nums[i]>mid) {return 1;
                }
                else if(nums[i]>left && nums[i]<mid)mid=nums[i];
                else if(nums[i]<left)left=nums[i];
            }   
        }
        return false;


        // APPROACH 2
        long prev = LONG_MIN;
        vector<vector<vector<
        return  solve(nums,prev,0,0);
    }
};
