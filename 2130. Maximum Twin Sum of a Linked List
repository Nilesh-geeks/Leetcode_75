Problem :: 2130. Maximum Twin Sum of a Linked List

In a linked list of size n, where n is even, the ith node (0-indexed) of the linked list is known as the twin of the (n-1-i)th node, if 0 <= i <= (n / 2) - 1.

For example, if n = 4, then node 0 is the twin of node 3, and node 1 is the twin of node 2. These are the only nodes with twins for n = 4.
The twin sum is defined as the sum of a node and its twin.

Given the head of a linked list with even length, return the maximum twin sum of the linked list.

Time Complexity :: O(N)
Space Complexity :: O(N)

CODE :: 
#pragma gcc optimize("03")
auto init= [](){
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    return 'c';
}();
class Solution {
public:
    int pairSum(ListNode* head) {
        vector<int>arr;
        ListNode* t = head;
        while(t){
            arr.push_back(t->val);
            t = t->next;
        }
        int sum = INT_MIN;
        for(int i=0 ; i<arr.size() ; i++){
            sum =  max(sum , arr[i] + arr[arr.size()-1-i]);
        }
        return sum;
    }
};
