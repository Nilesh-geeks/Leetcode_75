Problem Link -> https://leetcode.com/problems/greatest-common-divisor-of-strings/description/?envType=study-plan-v2&envId=leetcode-75
Problem :: 1071. Greatest Common Divisor of Strings

For two strings s and t, we say "t divides s" if and only if s = t + t + t + ... + t + t (i.e., t is concatenated with itself one or more times).

Given two strings str1 and str2, return the largest string x such that x divides both str1 and str2.

Time Complexirty  :: O(M+N)
Space Complexity  :: O(1)
Code :: 
class Solution {
//     Intuition
// GCD: The greatest common divisor (GCD) of two or more numbers is the greatest common factor number that divides them, exactly.
// In case of strings both the strings have to be in form of multiples of their GCD.

// For example: str1 = ABABAB, str2 = ABAB, GCD = AB

// Note that in the above example, str1 and str2 are multiples of AB i.e. their GCD.

// This gives us an important conclusion: if a GCD exists str1 + str2 == str2 + str1

// Approach
// Making use of the above conclusion:

// Ckeck if str1 + str2 == str2 + str1
// if true, find the GCD of their lengths and return a substring of that length of str1 (or str2).
// if false, return empty string
// Complexity
// Let m,n be the lengths of the two input strings str1 and str2

// Time complexity: O(m+n)
// Space complexity:O(m+n)
public:
    string gcdOfStrings(string str1, string str2) {
            if(str1+str2 == str2+str1){
            return str1.substr(0,gcd(size(str1), size(str2)));
        }

        return "";   
    }
};
